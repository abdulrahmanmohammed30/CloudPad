@model IEnumerable<NoteDto>
@{
    ViewData["Title"] = "Notes";
}

<div class="container mt-4">
    <div class="row">
        <!-- Left Sidebar -->
        <div class="col-md-4">
            <!-- Search Bar -->
            <form asp-action="Index" method="get" class="mb-3">
                <div class="input-group">
                    <input type="text" name="title" class="form-control" placeholder="Search notes..." value="@Context.Request.Query["searchTerm"]">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>

            <!-- Category Filter -->
            <div class="mb-3">
                <h5>Categories</h5>
                <ul class="list-group">
                    <li class="list-group-item">
                        <a asp-action="Index" asp-route-category="" class="text-decoration-none">All Categories</a>
                    </li>
                    @foreach (var category in ViewBag.Categories as List<CategoryDto>)
                    {
                        <li class="list-group-item">
                            <a asp-action="Index" asp-route-category="@category.Name" class="text-decoration-none">@category.Name</a>
                        </li>
                    }
                </ul>
            </div>

            <!-- Tag Filter -->
            <div>
                <h5>Tags</h5>
                <ul class="list-group">
                    @foreach (var tag in ViewBag.Tags as List<TagDto>)
                    {
                        <li class="list-group-item">
                            <a asp-action="Index" asp-route-tag="@tag.Name" class="text-decoration-none">#@tag.Name</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <!-- Notes List -->
        <div class="col-md-8">
            <h3 class="mb-3">Your Notes</h3>
            @if (!Model.Any())
            {
                <p>No notes found.</p>
            }
            else
            {
                <div class="list-group">
                    @foreach (var note in Model)
                    {
                        <a asp-action="Get" asp-controller="Note" asp-route-id="@note.Id" class="list-group-item list-group-item-action">
                            <h5>@note.Title</h5>
                            <p>@note.Content?.Substring(0, Math.Min(100, note.Content.Length))...</p>
                            <small class="text-muted">
                                Category: @note.Category?.Name | Tags: @(string.Join(", ", note.Tags.Select(t => t.Name)))
                            </small>
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>
